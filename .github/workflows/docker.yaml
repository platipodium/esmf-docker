# Github CI configuration file for building ESMF docker images based
# on ubuntu
#
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum hereon
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileContributor Carsten Lemmen <carsten.lemmen@hereon.de

name: ESMF Docker Build and Test

on:
  push:
    branches:
      - "main"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install poetry
          poetry install
          which poetry
#      - name: Run license compliance check
#        run: |
#          poetry run reuse lint

  build:
      runs-on: ubuntu-latest
      needs: lint
      strategy: 
          matrix:
            COMMUNICATOR: ["openmpi", "mpich"]
            VERSION: ["v8.4.0"]

      env:
        CONTAINER_REGISTRY_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/esmf:${{ matrix.VERSION }}-${{ matrix.COMMUNICATOR}}

      steps:
        -
          name: Checkout
          uses: actions/checkout@v3
        -
          name: Set up QEMU for multi-platform build
          uses: docker/setup-qemu-action@v2
        -
          name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        -
          name: Build and push to Docker hub
          uses: docker/build-push-action@v3
          with:
            context: .
            file: ./Dockerfile
            push: true
            platforms: linux/amd64,linux/arm64
            build-args: COMMUNICATOR=${{ matrix.COMMUNICATOR }} VERSION=${{ matrix.VERSION }}
            #tags: ${{ env.CONTAINER_REGISTRY_IMAGE }}
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/esmf:${{ matrix.VERSION }}-${{ matrix.COMMUNICATOR}}
 
  test:
      runs-on: ubuntu-latest
      needs: build
      strategy:
          matrix:
            COMMUNICATOR: ["openmpi", "mpich"]
            VERSION: ["v8.4.0"]
      env:
        CONTAINER_REGISTRY_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/esmf:${{ matrix.VERSION }}-${{ matrix.COMMUNICATOR}}
      steps:
        -
          name: Checkout
          uses: actions/checkout@v3
        - 
          name: Pull and run 
          uses: addnab/docker-run-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            image: ${{ env.CONTAINER_REGISTRY_IMAGE }}
            options: 
            run: /usr/local/bin/ESMF_PrintInfo

