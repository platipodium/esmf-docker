# Github CI configuration file for building ESMF docker images based
# on ubuntu
#
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum hereon
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileContributor Carsten Lemmen <carsten.lemmen@hereon.de

name: Build and Deploy ESMF Docker Images

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker:20.10.17
      services:
        - docker:20.10.17-dind
    env:
      COMMUNICATOR: openmpi
      CONTAINER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/esmf:${VERSION}-${COMMUNICATOR}
      VERSION: v8.4.0
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Check license compliance
        run: poetry run reuse lint
      - name: Build Docker image
        if: github.event_name == 'pull_request'
        run: |
          docker build -t "$CONTAINER_REGISTRY_IMAGE" --build-arg VERSION="$VERSION" --build-arg COMMUNICATOR="$COMMUNICATOR" .

  deploy:
    runs-on: ubuntu-latest
    container:
      image: docker:20.10.17
      services:
        - docker:20.10.17-dind
    env:
      COMMUNICATOR: openmpi
      CONTAINER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/esmf:${VERSION}-${COMMUNICATOR}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      VERSION: v8.4.0
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker registry
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - name: Build and push Docker image
        if: github.event_name == 'push'
        run: |
          docker build -t "$CONTAINER_REGISTRY_IMAGE" --build-arg VERSION="$VERSION" --build-arg COMMUNICATOR="$COMMUNICATOR" .
          docker push "$CONTAINER_REGISTRY_IMAGE"

