# GitLab CI configuration file for building ESMF docker images based
# on ubuntu
# 
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum hereon
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileContributor Carsten Lemmen <carsten.lemmen@hereon.de

# First stage checks for metadata (licenses)
stages:
    - lint
    - build
    - deploy

variables:
    CONTAINER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/esmf:${VERSION}-${COMMUNICATOR}

default:
    interruptible: true

.base_job:
    image: docker:20.10.17
    services:
        - docker:20.10.17-dind
    tags:
        - docker
    parallel:
        matrix:
            - VERSION: [ "v8.4.0" ]
            - COMMUNICATOR: ["openmpi", "mpich"]

license-compliance:
    image: python:3.10
    stage: lint
    before_script:
        - pip install --upgrade pip
        - pip install poetry
        - poetry install
    script:
        - poetry run reuse lint
    allow_failure: true

# The build-docker job is only executed on non-main branches, i.e. without deployment
build-docker:
    extends: 
        - .base_job
    stage: build
    script:
        - docker build -t $CONTAINER_REGISTRY_IMAGE --build-arg VERSION=${VERSION} --build-arg COMMUNICATOR=${COMMUNICATOR} .
    rules:
        - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

push-docker:
    extends: 
        - .base_job
    stage: deploy
    before_script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    script:
        - docker build -t $CONTAINER_REGISTRY_IMAGE --build-arg VERSION=${VERSION} --build-arg COMMUNICATOR=${COMMUNICATOR} .
        - docker push $CONTAINER_REGISTRY_IMAGE
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
